@model Treinreizen.ViewModel.ShoppingCartVM

@{
    ViewData["Title"] = "Index";
}


<h2>Uw Winkelmand</h2>

@if (Model != null)
{

    <form asp-action="Payment">
        <table class="table table100-head">
            <tr>
                <th>
                    Vertrekdatum
                </th>
                <th>
                    Aankomstdatum
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cart[0].Van)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cart[0].Naar)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cart[0].AantalTickets)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cart[0].Klasse)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cart[0].Prijs)

                </th>
            </tr>
            @{ double total = 0;}
            @for (var i = 0; i < Model.Cart.Count; i++)
            {
                <tr>
                    @Html.HiddenFor(m => Model.Cart[i].TrajectId)
                    <td>
                        <input asp-for="@Model.Cart[i].Vertrekdatum" readonly="readonly" class="form-control" />
                    </td>
                    <td>

                        <input asp-for="@Model.Cart[i].Aankomstdatum" readonly="readonly" class="form-control" />
                    </td>
                    <td>
                        <input asp-for="@Model.Cart[i].Van" readonly="readonly" class="form-control" />
                    </td>
                    <td>
                        <input asp-for="@Model.Cart[i].Naar" readonly="readonly" class="form-control" />
                    </td>
                    <td>
                        <input asp-for="@Model.Cart[i].AantalTickets" readonly="readonly" class="form-control" />
                    </td>
                    <td>
                        <input asp-for="@Model.Cart[i].Klasse" readonly="readonly" class="form-control" />
                    </td>
                    <td>
                        <input asp-for="@Model.Cart[i].Prijs" readonly="readonly" class="form-control" />
                        @{ total += Model.Cart[i].Prijs;}
                    </td>
                    <td>
                        <a asp-controller="ShoppingCart" asp-action="Delete" asp-route-trajectId="@Model.Cart[i].TrajectId">
                            <img src="~/images/delete.jpg" style="width:30px" />
                        </a>

                    </td>
                </tr>

            }
            <tr>
                <td>
                    Totaal
                </td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td id="cart-total">
                    <input id="txtTotal" value="@total" type="number" readonly="readonly" />
                </td>

            </tr>

            <tr>
                <td>

                    <input type="submit" value="Checkout" class="btn btn-default" />

                </td>
            </tr>



        </table>
    </form>

}
else
{
    @Html.Raw("Your shoppingcart is empty at the moment")
}
<a asp-controller="Trein"
   asp-action="Home">

    Continue
</a>

@section Scripts{
    @*<script>
                    //is het zelfde als window.addlistener(load,script)... van vorig jaar
                    $(() => {
                        //selecteer alle input elementen die eindigen met aantal
                        //selecteer alle ids die eindigen met 'aantal' en plaats daar een change listerner op
                        $("[id$=Aantal]").on('change', (e) =>{
                            console.log("change");
                            //geef het object en neem het dataatribuut "AANTAL"
                            let number = $(e.currentTarget).data("aantal");
                            let selectorPrice = "Cart_" + number + "_Prijs";
                            //geef mij de waarde van selectorPrice
                            let price = $("#" + selectorPrice).val();

                            let selector = "txtSubTotal" + number;
                            //toont de waarde op de console (hoeft niet)
                            console.log($(e.currentTarget).val() * price);
                            //plaatst de waarde van de hoeveelheid * de prijs in het subtotaaal.
                            $("#" + selector).val($(e.currentTarget).val() * price);

                            //selecteer alle subtotalen en tel deze op
                            let sum = 0;
                            $('[id^=txtSubTotal]').each((e) => {
                                //zit er wele iets in de current target, zo ja dan begin ik ze pas op te tellen!
                                if (!isNaN(e.currentTarget.value) && e.currentTarget.value.length != 0) {

                                    sum += parseFloat(e.currentTarget.value);
                                }
                            });
                            //ik steek het totaal in het veld Total
                            $('#txtTotal').val(sum);
                        }
                </script>*@
        }


