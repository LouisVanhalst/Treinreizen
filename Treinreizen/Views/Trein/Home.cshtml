@model Treinreizen.ViewModel.ZoekListVM

@{
    ViewData["Title"] = "Home";
}

@{
    var totalePrijsMessage = "";
    if (Model.Routes != null)
    {
        decimal totalePrijs = 0;
        foreach (var item in Model.Routes)
        {
            if (item.ReisMogelijkheden.Prijs != null)
            {
                totalePrijs += Convert.ToDecimal(item.ReisMogelijkheden.Prijs);
            }
        }
        totalePrijsMessage += "Prijs: € " + totalePrijs;
    }
}

<h2>HomeVM</h2>

<div class="row">
    <div class="col-md-4 ">
        <form asp-action="Home">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input checked asp-for="isEnkel" /> @Html.DisplayNameFor(model => model.isEnkel)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Van" class="control-label"></label>
                <select asp-for="Van" asp-items="@Model.Steden" class="form-control ">
                    <option selected disabled>Please select </option>
                    <link href="~/css/sitetest.css" rel="stylesheet" />
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Naar" class="control-label"></label>
                <select asp-for="Naar" asp-items="@Model.Steden" class="form-control">
                    <option selected disabled>Please select </option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="HeenDate" class="control-label"></label>
                <input asp-for="HeenDate" class="form-control" />
                <span asp-validation-for="HeenDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TerugDate" class="control-label"></label>
                <input asp-for="TerugDate" class="form-control" />
                <span asp-validation-for="TerugDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Aantal" class="control-label"></label>
                <input asp-for="Aantal" class="form-control" />
                <span asp-validation-for="Aantal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Zoek Route" class="btn btn-default" />
            </div>

        </form>
    </div>
    <div class="col-md-8 borderCarousel">
        <div id="myCarousel" class="carousel slide" data-ride="carousel">
            <!-- Indicators -->
            <ol class="carousel-indicators">
                <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
                <li data-target="#myCarousel" data-slide-to="1"></li>
                <li data-target="#myCarousel" data-slide-to="2"></li>
            </ol>

            <!-- Wrapper for slides -->
            <div class="carousel-inner">
                <div class="item active">
                    <img src="~/images/slide2.jpeg">
                </div>

                <div class="item">
                    <img src="~/images/slide3.jpeg" >
                </div>

                <div class="item">
                    <img src="~/images/slide4.jpeg" >
                </div>
            </div>

            <!-- Left and right controls -->
            <a class="left carousel-control" href="#myCarousel" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#myCarousel" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
    
</div>

@*
    <div>
        <h4>ZoekListVM</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.isEnkel)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.isEnkel)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Van)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Van)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Naar)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Naar)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.HeenDate)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.HeenDate)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TerugDate)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TerugDate)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Aantal)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Aantal)
            </dd>
        </dl>
    </div>
    <div>
        @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
        <a asp-action="Index">Back to List</a>
    </div>
*@

@if (Model.Routes != null)
{
    <table class="table" id="myTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Routes.First().Vertrekdatum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Routes.First().ReisMogelijkheden.Vertrektijd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Routes.First().ReisMogelijkheden.VertrekNavigation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Routes.First().ReisMogelijkheden.Aankomsttijd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Routes.First().ReisMogelijkheden.AankomstNavigation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Routes.First().TreinNummerNavigation.TreinNaam)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Routes.First().ReisMogelijkheden.Prijs)
                </th>
                <th>
                    Reistijd
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Routes)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Vertrekdatum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReisMogelijkheden.Vertrektijd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReisMogelijkheden.VertrekNavigation.Naam)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReisMogelijkheden.Aankomsttijd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReisMogelijkheden.AankomstNavigation.Naam)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TreinNummerNavigation.TreinNaam)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReisMogelijkheden.Prijs)
                    </td>
                    <td></td>
                    <td>
                        @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |*@
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ })
                        @*@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })*@
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        @totalePrijsMessage
    </div>
    <div>
        <div>
            <h1>Op zoek naar een hotel?</h1>
            <p>
                Op zoek naar een hotel op je aankomst?
                Ga een kijkje nemen in ons assortiment van hotels bij jouw in de buurt!
            </p>
        </div>
        
        <form method="post">
            <input type="submit" asp-controller="Hotel" asp-action="Hotels" asp-route-stadId="@Model.Naar" value="Boek nu!" class="btn btn-default"/>
        </form>
    </div>
   
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <link href="~/lib/jqueryui/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/jqueryui/jquery-ui.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>

    <script>
        $(function () {
            $("#HeenDate").datepicker({
                minDate: 0,
                maxDate: '+2W',
                dateFormat: 'dd-mm-yy',

                onSelect: function (dateStr) {
                    var min = dateStr;

                    $("#TerugDate").datepicker('option', 'minDate', min || 0);
                }
            });

            $("#TerugDate").datepicker({
                minDate: 0,
                maxDate: '+2W',
                dateFormat: 'dd-mm-yy',

                onSelect: function (dateStr) {
                    if ($("#HeenDate").datepicker("getDate") !== null) {
                        var start = $("#HeenDate").datepicker("getDate");
                        var end = $(this).datepicker("getDate");

                        var days = (end - start) / (1000 * 60 * 60 * 24);
                        console.log("verschil: ", days);

                    }
                }
            });
        })

        var opties = document.getElementById("Naar").getElementsByTagName("option");
        for (var i = 0; i < opties.length; i++) {
            if (opties[i].value == document.getElementById("Van").getSelection) {
                console.log(document.getElementById("Van").getSelection)
                opties[i].disabled = true;
            }
            else {
                opties[i].disabled = false;
            }
        }

        @*function disableNext(Van, Naar) {
            var van = document.getElementById(Van);
            var naar = document.getElementById(Naar);

            if (van == naar) {
                naar.disabled = true;
            }
        }*@
    </script>


}